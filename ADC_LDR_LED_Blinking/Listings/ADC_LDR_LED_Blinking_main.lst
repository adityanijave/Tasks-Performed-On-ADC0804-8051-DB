C51 COMPILER V9.59.0.0   ADC_LDR_LED_BLINKING_MAIN                                         11/07/2023 10:12:43 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ADC_LDR_LED_BLINKING_MAIN
OBJECT MODULE PLACED IN .\Objects\ADC_LDR_LED_Blinking_main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ADC_LDR_LED_Blinking_main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\ADC_LDR_LED_Blinking_main.lst) TABS(2) OBJECT(.\Objects\ADC_LDR_LED_Blinking_main.obj)

line level    source

   1          //including required libs
   2          #include<reg51.h>
   3          #include"lcd.h"
   4          #include"delay.h"
   5          
   6          //micro decleration
   7          #define ADC_port P2;
   8          
   9          //special function register
  10          //sfr ADC_port = 0xA0;
  11          
  12          //sbit decleration
  13          sbit Rd   = P1^3;                         //Read pin
  14          sbit Wr   = P1^4;                         //write pin
  15          sbit INTR = P1^5;                         //INTR pin
  16          
  17          sbit l1 = P3^0;
  18          sbit l2 = P3^1;
  19          sbit l3 = P3^2;
  20          sbit l4 = P3^3;
  21          
  22          void main()                               //main function (1time exe.able)
  23          {
  24   1        unsigned char ADC_value;                //ADC_value variable req. for ADC_port
  25   1        init();                                 //calling init() function to activate the LCD
  26   1        LCD_cmd(0x80);                          //calling LCD_cmd function row-1, col-0
  27   1        LCD_string("ADC = ");                   //calling LCD_string function 
  28   1        LCD_cmd(0x89);                          //calling LCD_cmd function row-1, col-9
  29   1        LCD_data(0xDF);                         //calling LCD_data function with the hex value of degree symbol
  30   1        LCD_data('C');                          //calling LCD_data function with 'C' argument
  31   1        
  32   1        LCD_cmd(0xC2);
  33   1        LCD_string("ADITYA A NIJAVE");
  34   1        
  35   1        while(1)                                //forever loop (or we can use for(;;))
  36   1        {
  37   2          Rd = 1;                               //Read pin is high
  38   2          Wr = 0;                               //Write pin is low
  39   2          delay(1);                             //calling delay function which is used here to create pluse
  40   2          Wr = 1;                               //Write pin is high
  41   2          while(INTR == 1);                     //if INTR pin is 1 then conversion is in process and if INTR is 0 then conve
             -rsion is complate
  42   2          Rd = 0;                               //Read pin is low
  43   2          
  44   2          ADC_value = ADC_port;                 //assigning the value of ADC_port to ADC_value variable (who's range is fr
             -om 0 to 255)
  45   2          
  46   2          LCD_cmd(0x86);                        //calling LCD_cmd function row-1, col-6
  47   2          LCD_data((ADC_value / 100) + 48);     //calling LCD_data function to pass hundereds place integer 
  48   2          LCD_data(((ADC_value/10)%10)+48);     //calling LCD_data function to pass tens place integer
  49   2          LCD_data((ADC_value % 10) + 48);      //calling LCD_data function to pass units place integer
  50   2          
  51   2          
  52   2          if (ADC_value < 100)
C51 COMPILER V9.59.0.0   ADC_LDR_LED_BLINKING_MAIN                                         11/07/2023 10:12:43 PAGE 2   

  53   2          {
  54   3            l1 = 1;
  55   3            l2 = 0;
  56   3            l3 = 0;
  57   3            l4 = 0;
  58   3          }
  59   2          else if (ADC_value >= 100 && ADC_value  <= 150)
  60   2          {
  61   3            l1 = 0;
  62   3            l2 = 1;
  63   3            l3 = 0;
  64   3            l4 = 0;
  65   3          }
  66   2          else if (ADC_value >= 150 && ADC_value  <= 200)
  67   2          {
  68   3            l1 = 0;
  69   3            l2 = 0;
  70   3            l3 = 1;
  71   3            l4 = 0;
  72   3          }
  73   2          else if (ADC_value >= 200 && ADC_value  <= 255)
  74   2          {
  75   3            l1 = 0;
  76   3            l2 = 0;
  77   3            l3 = 0;
  78   3            l4 = 1;
  79   3          }
  80   2        }
  81   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    240    ----
   CONSTANT SIZE    =     23    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
