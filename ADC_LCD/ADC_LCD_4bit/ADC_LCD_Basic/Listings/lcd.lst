C51 COMPILER V9.59.0.0   LCD                                                               11/08/2023 09:30:10 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lcd.l
                    -st) TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          //including header file of lcd 4 bit
   2          #include"lcd.h"
   3          
   4          // init() function defination
   5          void init()                       
   6          {
   7   1        
   8   1        delay(5);                       // calling delay function
   9   1        LCD_cmd(0x28);                  // calling lcd command function for 4 bit data (2 line)
  10   1        LCD_cmd(0x0C);                  // calling lcd command function for display on and curser off
  11   1        LCD_cmd(0x06);                  // calling lcd command function for entry mode
  12   1      }
  13          
  14          // LCD_cmd() function defination with one argument "cmd"
  15          void LCD_cmd(unsigned char cmd)
  16          {
  17   1        
  18   1        RS = 0;                         //the register select is in active low mode for command
  19   1        RW = 0;                         //open (or GND)
  20   1        
  21   1        LCD_port = (cmd & 0xF0);        //assigning the value of cmd (anding with 0xF0) to  LCD_port
  22   1        EN = 1;                         //creating pluse for EN (high)
  23   1        delay(5);                       //calling delay function for EN
  24   1        EN = 0;                         //creating pluse for EN (low)
  25   1        delay(5);                       //calling delay function delay for EN
  26   1        
  27   1        LCD_port = ((cmd << 4) & 0xF0); //assigning the value of cmd (left shift by 4 and anding with 0xF0) to  L
             -CD_port
  28   1        EN = 1;                         //creating pluse for EN (high)
  29   1        delay(5);                       //calling delay function for EN
  30   1        EN = 0;                         //creating pluse for EN (low)
  31   1        delay(5);                       //calling delay function for EN
  32   1      }
  33          
  34          // LCD_data() function defination with one argument "dat"
  35          void LCD_data(unsigned char dat)
  36          {
  37   1        RS = 1;                         //the register select is in active high mode for data
  38   1        RW = 0;                         //open (or GND)
  39   1        
  40   1        LCD_port = (dat & 0xF0);        //assigning the value of dat (anding with 0xF0) to  LCD_port
  41   1        EN = 1;                         //creating pluse for EN (high)
  42   1        delay(5);                       //calling delay function for EN
  43   1        EN = 0;                         //creating pluse for EN (low)
  44   1        delay(5);                       //calling delay function for EN
  45   1        
  46   1        LCD_port = ((dat << 4)& 0xF0);  //assigning the value of dat (left shift by 4 and anding with 0xF0) to  LC
             -D_port
  47   1        EN = 1;                         //creating pluse for EN (high)
  48   1        delay(5);                       //calling delay function for EN
  49   1        EN = 0;                         //creating pluse for EN (low)
  50   1        delay(5);                       //calling delay function for EN
  51   1      }
  52          
C51 COMPILER V9.59.0.0   LCD                                                               11/08/2023 09:30:10 PAGE 2   

  53          // LCD_string() function defination with one pointer argument "*string"
  54          void LCD_string(unsigned char *string)
  55          {
  56   1        while(*string)                  //while loop will terminated when it get a null value (i.e., '\0' that the end of 
             -string)
  57   1        {
  58   2          LCD_data(*string++);          //passing the value present at that location through LCD_data() function with i
             -ncrement by 1
  59   2        }
  60   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    169    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
