C51 COMPILER V9.59.0.0   ADC_LCD_MAIN                                                      11/08/2023 09:12:58 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ADC_LCD_MAIN
OBJECT MODULE PLACED IN .\Objects\ADC_LCD_main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ADC_LCD_main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\ADC_LCD_main.lst) TABS(2) OBJECT(.\Objects\ADC_LCD_main.obj)

line level    source

   1          //including required libs
   2          #include<reg51.h>
   3          #include"lcd.h"
   4          #include"delay.h"
   5          
   6          //micro decleration
   7          #define ADC_port P2;                      // port 2 is assign as ADC_port
   8          
   9          //special function register               //another method of assigning
  10          //sfr ADC_port = 0xA0;
  11          
  12          //sbit decleration
  13          sbit Rd   = P1^3;                         //Read pin
  14          sbit Wr   = P1^4;                         //write pin
  15          sbit INTR = P1^5;                         //INTR pin
  16          
  17          //forword decleration
  18          void pre_data();                          //pre_data function forword decleration
  19          void ADC_display(unsigned int);           //ADC_display function forword decleration with one parameter
  20          unsigned char ADC_read();                 //ADC_read function forword decleration
  21          
  22          void main()                               //main function (1-time exe.able)
  23          {
  24   1        pre_data();                             //calling pre_data function
  25   1        while(1)                                //forever loop (or we can use for(;;))
  26   1        {
  27   2                          
  28   2          ADC_display(ADC_read());              //calling ADC_display function having ADC_read function as parameter
  29   2        }
  30   1      }
  31          
  32          
  33          void pre_data()
  34          {
  35   1        init();                                 //calling init() function to activate the LCD
  36   1        LCD_cmd(0x80);                          //calling LCD_cmd function row-1, col-0
  37   1        LCD_string("ADC = ");                   //calling LCD_string function 
  38   1        LCD_cmd(0x89);                          //calling LCD_cmd function row-1, col-9
  39   1        LCD_data(0xDF);                         //calling LCD_data function with the hex value of degree symbol
  40   1        LCD_data('C');                          //calling LCD_data function with 'C' argument
  41   1        
  42   1        LCD_cmd(0xC2);                          //calling LCD_cmd function row-2, col-2
  43   1        LCD_string("ADITYA NIJAVE");            //calling LCD_string() function and passing string through it to displa
             -y on LCD
  44   1      }
  45          
  46          
  47          
  48          unsigned char ADC_read()                  //ADC_read() function defination
  49          {
  50   1          unsigned char ADC_value;              //ADC_value variable req. for ADC_port
  51   1        
  52   1          Rd = 1;                               //Read pin is high
  53   1          Wr = 0;                               //Write pin is low
C51 COMPILER V9.59.0.0   ADC_LCD_MAIN                                                      11/08/2023 09:12:58 PAGE 2   

  54   1          delay(1);                             //calling delay function which is used here to create pluse
  55   1          Wr = 1;                               //Write pin is high
  56   1          while(INTR == 1);                     //if INTR pin is 1 then conversion is in process and if INTR is 0 then conve
             -rsion is complate
  57   1          Rd = 0;                               //Read pin is low
  58   1        
  59   1          ADC_value = ADC_port;                 //assigning the value of ADC_port to ADC_value variable (who's range is fr
             -om 0 to 255)
  60   1          return ADC_value;
  61   1      }
  62          
  63          void ADC_display(unsigned int ADC_value)  ////ADC_display() function defination with one paramter
  64          {
  65   1          LCD_cmd(0x86);                        //calling LCD_cmd function row-1, col-6
  66   1          LCD_data((ADC_value / 100) + 48);     //calling LCD_data function to pass hundereds place integer 
  67   1          LCD_data(((ADC_value%10)/10)+48);     //calling LCD_data function to pass tens place integer
  68   1          LCD_data((ADC_value & 10) + 48);      //calling LCD_data function to pass units place integer
  69   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    148    ----
   CONSTANT SIZE    =     21    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
